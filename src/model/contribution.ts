export class Contribution {
  /** unique id, auto generated by server */
  id: string;
  userId: string;
  conferenceId: string;
  /** unix timestamp in millseconds */
  updateDate: number;
  /** min len: 10, max len: 100 */
  title: string;
  /** min len: 10, max len: 2000 */
  abstract: string;
  /**
   * min len: 1, max len: 10
   * item: User.id is empty if the contributor
   *   is not a register user.
   */
  // contributors: User[] = [];
  status: ContributionStatus;
  /** not required, max len: 2000 */
  comment: string;
  /**
   * Should be written in {uuid}.{ext}, in which the
   * uuid is generated by client before upload, ext is
   * took from original file name.*/
  fileName: string;

  constructor() {
    this.id = '';
    this.userId = '';
    this.conferenceId = '';
    this.updateDate = 0;
    this.title = '';
    this.abstract = '';
    this.status = ContributionStatus.notAssigned;
    this.comment = '';
    this.fileName = '';
  }
}

export enum ContributionStatus {
  notAssigned = -1,
  pending = 0,
  accepted = 1,
  rejected = 2,
  revoked = 3, // 被投稿人撤回
  needModification = 4,
}
